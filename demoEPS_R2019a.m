%Orbit simulation
%The object is assumed submitted only to gravity and it's mass is m in kg
m = 10; %mass (kg)
%Initialisation of Keplerian parameters
a = 6678; %semimajor axis (km)
e = 0.001; %eccentricity
i = 51.6; %inclination (degrees)
O = 300; %Right ascension of the right ascending node (degrees) 
o = 90; %Argument of the perigee (degrees)                      
nu = 0; %True anomaly (degrees)
%Initialisation of date
year = 2020;
month = 3;
day = 21;
hours = 0;
minutes = 0;
seconds = 0;

N_orbits = 9;

Torbit=2*pi*sqrt(a^3/(3.986004418E5));
tsimulation=N_orbits*Torbit;
delta_t = 1; %simulation time step (seconds)

%Battery configuration
Cbat=2.6;           %Cell capacity in [Ah]
Nbs=4;
Nbp=4;
C=Cbat*Nbp*3600;    %Battery Capacity for all parallel arrays [Ampere*sec]

%Loads
Pload1=50;          %Required power Thruster [W]
%iLoad=2;     %to test, in [A]
Pload2=2;           %Required power OBC [W]
Pload3=2.5;         %Required power ADCS w/o RWA [W]
Pload4=1.7;         %Required power Com (Rx)[W]

eff_i1=0.9;         %efficiency PDU CH not regulated
eff_i2=0.85;        %efficiency PDU CH 3.3V

%Power Generation
Psa=48;             %Peak power generation [W]
eff_ACU=0.85;       %efficiency ACU conversion
P_eps=0.6;          %internal power consumption EPS [W]

%Battery
DOD_0=0;            %initial DOD from 0 to 1
%iB=2;   %to test in [A]

%Charge/Discharge logic
I_BD_max= 5;        %Maximum discharge current [A] approx. C/2
I_BC_max= 3;        %Maximum charge current [A] approx. C/3.5
%inside the function:
% Vfull=16.8;     %full battery charge
% Vmax=16.6;      %maximum charge battery
% Vnorm=14;       %battery normal voltage
% Vsafe=13.4;      %minimum battery safe voltage
% Vcrit=13;       %critical battery voltage


EPS_orbit_v1_R2019a
Power=sim('EPS_orbit_v1_R2019a');

EPS_sim_test_v1_R2019a
E=sim('EPS_sim_test_v1_R2019a');


%% data for Plots
time = E.tout;
DOD = getdatasamples(E.DOD,(1:length(time)));
Vbat = getdatasamples(E.Vbat,(1:length(time)));
Ibat = getdatasamples(E.Ibat,(1:length(time)));
SOC = 100*(1 - DOD);
Pcollected = getdatasamples(Power.Psa1,(1:length(time)));
beta = getdatasamples(Power.beta,(1:length(time)));

ibc=zeros(length(time),1);
ibd=zeros(length(time),1);
for i=1:length(time)
    if Ibat(i)>0
        ibc(i,1)=0;
        ibd(i,1)=Ibat(i);
    end
    if Ibat(i)<0
        ibc(i,1)=-Ibat(i);
        ibd(i,1)=0;
    end
end

%% Plots

time=time/3600;  %to plot in hours
figure(1)
set(gcf,'color','w');
    subplot(2,2,1)
        plot(time,SOC,'b','LineWidth',1)
        hold on;
        legend('State of Charge [%]')
        title('4S 4P Battery State of Charge')
        ylabel('Charge %')
        xlabel('time in hours')
        grid on
subplot(2,2,3)
        plot(time,Vbat,'b','LineWidth',1)
        hold on;
%         plot(time(:,1),16.8,'--b.')
%         plot(time(:,1),16.6,'--m.')
%         plot(time(:,1),14.0,'--g.')
%         plot(time(:,1),13.4,'--r.')
%         plot(time(:,1),13.0,'--b.')
%        legend('Battery array Voltage [V]','100%','Vmax','Vnormal','Vsafe','Vcritical')
        legend('Battery array Voltage [V]')
        title('4S 4P Battery Voltage')
        ylabel('Voltage')
        xlabel('time in hours')
        grid on
subplot(2,2,2)
        plot(time,ibc,'b','LineWidth',1)
        hold on;
%          plot(time(:,1),1.04,'--b.')
%          plot(time(:,1),0.52,'--g.')
%          plot(time(:,1),2.08,'--r.')
%        legend('Charge Current [A]','C/10','C/20','C/5')
        legend('Charge Current [A]')
        title('4S 4P Battery Charge Current')
        ylabel('Current [A]')
        xlabel('time in hours')
        grid on
subplot(2,2,4)
        plot(time,ibd,'b','LineWidth',1)
        hold on;
        legend('Discharge Current [A]')
        title('4S 4P Battery Discharge Current')
        ylabel('Current [A]')
        xlabel('time in hours')
        grid on
        
figure(2)
set(gcf,'color','w');
    subplot(2,1,1)
        plot(time,Pcollected,'b','LineWidth',1)
        hold on;
        legend('Power Generated by SA [W]')
        title('Power Generated')
        ylabel('Power [W]')
        xlabel('time in hours')
        grid on
subplot(2,1,2)
        plot(time,beta,'b','LineWidth',1)
        hold on;
        legend('Beta angle [deg]')
        title('Angle between sun and projection on orbit plane (Beta angle)')
        ylabel('Angle [deg]')
        xlabel('time in hours')
        grid on
    